# Require dependencies from Gemfile
Bundler.require

# Let's define some options, we would like to use. You can
# use the command line to set/override the values.
#
# Example:
#   `bundle exec metacrunch 03_job_with_options.metacrunch -c 20`
#
# To get a list of all available options on the command line
# use --help.
#
# Example:
#   `bundle exec metacrunch 03_job_with_options.metacrunch --help`
#
options do
  # Note: Args are OptionParser compatible. To learn about
  # OptionParser look here: http://ruby-doc.org/stdlib/libdoc/optparse/rdoc/OptionParser.html

  # An option wth a default
  add :count_until, "-c", "--count NUMBER", "Count until NUMBER", Integer, default: 10
  # A required option
  add :name, "-n", "--name STRING", "Set Name", String, required: true
  # A boolean (switch) option
  add :verbose, "-x", "Enable verbose mode"
end

# Note: Options get evaluated and instantiated during parsing phase.
# This way they can be referenced right after the options
# block.
puts "Options: #{options}"

# Non option arguments are available via ARGV. To require non option arguments
# set `options(require_args: true) { ... }`
puts "ARGV: #{ARGV}"

# Every object that responds to `#each` (Enumerable) is a valid source.
# In this case we create a Range object from 1 to 10.
source 1..options[:count_until]

transformation ->(number) do
  puts "transformation called: #{number}"
end

