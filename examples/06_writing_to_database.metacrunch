# Require dependencies from Gemfile
Bundler.require

# To connect to the database Sequel supports connection URLs.
# Here we define an option that allows us to overwrite the connection
# URL default (sqlite://THIS_DIR/dummy.sqlite) from the command line.
options do
  add :database_url, "-d", "--database URL", "Database connection URL", default: "sqlite://#{::File.expand_path(__dir__)}/../assets/dummy.sqlite"
end

# Create a database connection object with Sequel (Sequel is a dependency of the metacrunch-db package)
# We connect to a sqlite3 database here. You can connect to any SQL database that is supported
# by Sequel (https://github.com/jeremyevans/sequel).
SOURCE_DB = Sequel.connect("sqlite://#{::File.expand_path(__dir__)}/../assets/dummy.sqlite")

# Now create the dataset we like to use. The provided dummy.sqlite database has one table (users)
# with one column (name) and holds 100 dummy user records. To use the source, it is required to
# use a dataset with an unambiguous order.
users = SOURCE_DB[:users].order(:id)

# For this example the destination database is an in-memory sqlite3 database but could be
# any database hat is supported by Sequel (https://github.com/jeremyevans/sequel).
DEST_DB = Sequel.sqlite

# Make sure the destination database table exists
DEST_DB.create_table(:users_with_a) do
  primary_key :id
  String :name
end

# To read from a database create the build in database source with a Sequel dataset.
source Metacrunch::DB::Source.new(users)

# For every row that matches the SQL query the transformation is called.
transformation ->(row) do
  # For this example, we select the rows where the user name starts with "A".
  # Only these rows are passed to the next transformation.
  row if row[:name].starts_with?("A")
end

# Called for every row where the user name starts with "A".
transformation ->(row) do
  puts row[:name]

  # Prepare the data for the db writer (actually not needed in this case because
  # 'row' is already a hash that fits the requirements)
  {id: row[:id], name: row[:name]}
end

# Each user with a name starting with 'A' gets written into the destination
# database table 'users_with_a'.
destination Metacrunch::DB::Destination.new(DEST_DB[:users_with_a])
